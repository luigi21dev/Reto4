import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

public class VistaRequerimientos {

    public static final ControladorRequerimientos controlador = new ControladorRequerimientos();

    public static void requerimiento1() {
        try {
            ArrayList<Requerimiento_1Vo> resultado_requerimiento1 = controlador.consultarRequerimiento1();
            resultado_requerimiento1.forEach(System.out::println);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento2() {
        try {
            ArrayList<Requerimiento_2Vo> resultado_requerimiento2 = controlador.consultarRequerimiento2();
            resultado_requerimiento2.forEach(System.out::println);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3() {
        try {
            ArrayList<Requerimiento_3Vo> resultado_requerimiento3 = controlador.consultarRequerimiento3();
            resultado_requerimiento3.forEach(System.out::println);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

}

public class ControladorRequerimientos {
    private Requerimiento_1Dao requerimiento_1Dao;
    private Requerimiento_2Dao requerimiento_2Dao;
    private Requerimiento_3Dao requerimiento_3Dao;

    public ControladorRequerimientos() {
        this.requerimiento_1Dao = new Requerimiento_1Dao();
        this.requerimiento_2Dao = new Requerimiento_2Dao();
        this.requerimiento_3Dao = new Requerimiento_3Dao();
    }

    public ArrayList<Requerimiento_1Vo> consultarRequerimiento1() throws SQLException {
        return this.requerimiento_1Dao.requerimiento1();
    }

    public ArrayList<Requerimiento_2Vo> consultarRequerimiento2() throws SQLException {
        return this.requerimiento_2Dao.requerimiento2();
    }

    public ArrayList<Requerimiento_3Vo> consultarRequerimiento3() throws SQLException {
        return this.requerimiento_3Dao.requerimiento3();
    }
}

public class Requerimiento_1Vo {
    private Integer IDLider;
    private String Nombre;
    private String PrimerApellido;
    private Integer Salario;

        public Requerimiento_1Vo (){
        }

        public Integer getIDLider() {
            return IDLider;
        }

        public void setIDLider(Integer iDLider) {
            IDLider = iDLider;
        }

        public String getNombre() {
            return Nombre;
        }

        public void setNombre(String nombre) {
            Nombre = nombre;
        }

        public String getPrimerApellido() {
            return PrimerApellido;
        }

        public void setPrimerApellido(String primerApellido) {
            PrimerApellido = primerApellido;
        }

        public Integer getSalario() {
            return Salario;
        }

        public void setSalario(Integer salario) {
            Salario = salario;
        }

        @Override
    public String toString() {
        return IDLider + " " + Nombre + " " + PrimerApellido + " " + Salario;
    }
}

public class Requerimiento_2Vo {
    private Integer IDProyecto;
    private String NombreMaterial;

        public Requerimiento_2Vo (){
        }

        public Integer getIDProyecto() {
            return IDProyecto;
        }

        public void setIDProyecto(Integer iDProyecto) {
            IDProyecto = iDProyecto;
        }

        public String getNombreMaterial() {
            return NombreMaterial;
        }

        public void setNombreMaterial(String nombreMaterial) {
            NombreMaterial = nombreMaterial;
        }

        @Override
    public String toString() {
        return IDProyecto + " " + NombreMaterial;
    }
}

public class Requerimiento_3Vo {
    private Integer IDProyecto;
    private String Ciudad;
    private String Nombre;

        public Requerimiento_3Vo() {
        }

        public Integer getIDProyecto() {
            return IDProyecto;
        }

        public void setIDProyecto(Integer iDProyecto) {
            IDProyecto = iDProyecto;
        }

        public String getCiudad() {
            return Ciudad;
        }

        public void setCiudad(String ciudad) {
            Ciudad = ciudad;
        }

        public String getNombre() {
            return Nombre;
        }

        public void setNombre(String nombre) {
            Nombre = nombre;
        }

        @Override
    public String toString() {
        return IDProyecto + " " + Ciudad + " " + Nombre;
    }
}

public class Requerimiento_1Dao {
    public ArrayList<Requerimiento_1Vo> requerimiento1() throws SQLException {
        Connection connection = JDBCUtilities.getConnection();
        ArrayList<Requerimiento_1Vo> listado_registros_rq1 = new ArrayList<Requerimiento_1Vo>();
        String sql = "SELECT l.ID_Lider, l.Nombre, l.Primer_Apellido, l.Salario FROM Lider l WHERE l.Salario > (SELECT AVG(Salario)FROM Lider l) ORDER BY Salario DESC";
        try (Statement stmt = connection.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                Requerimiento_1Vo requerimiento1 = new Requerimiento_1Vo();
                requerimiento1.setIDLider(rs.getInt("ID_Lider"));
                requerimiento1.setNombre(rs.getString("Nombre"));
                requerimiento1.setPrimerApellido(rs.getString("Primer_Apellido"));
                requerimiento1.setSalario(rs.getInt("Salario"));
                listado_registros_rq1.add(requerimiento1);
            }
        }
        return listado_registros_rq1;
    }
}

public class Requerimiento_2Dao {
    public ArrayList<Requerimiento_2Vo> requerimiento2() throws SQLException {
        Connection connection = JDBCUtilities.getConnection();
        ArrayList<Requerimiento_2Vo> listado_registros_rq2 = new ArrayList<Requerimiento_2Vo>();
        String sql = "SELECT p.ID_Proyecto, mc.Nombre_Material FROM Proyecto p JOIN Compra c ON (p.ID_Proyecto=c.ID_Proyecto) JOIN MaterialConstruccion mc ON (c.ID_MaterialConstruccion = mc.ID_MaterialConstruccion) WHERE p.ID_Proyecto In (12,15,18) ORDER BY p.ID_Proyecto DESC";
        try (Statement stmt = connection.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                Requerimiento_2Vo requerimiento2 = new Requerimiento_2Vo();
                requerimiento2.setIDProyecto(rs.getInt("ID_Proyecto"));
                requerimiento2.setNombreMaterial(rs.getString("Nombre_Material"));
                listado_registros_rq2.add(requerimiento2);
            }
        }
        return listado_registros_rq2;
    }
    
}

public class Requerimiento_3Dao {
    public ArrayList<Requerimiento_3Vo> requerimiento3() throws SQLException {
        Connection connection = JDBCUtilities.getConnection();
        ArrayList<Requerimiento_3Vo> listado_registros_rq3 = new ArrayList<Requerimiento_3Vo>();
        String sql = "SELECT p.ID_Proyecto, p.Ciudad, l.Nombre FROM Proyecto p JOIN Lider l ON(l.ID_Lider =p.ID_Lider) WHERE p.ID_Proyecto BETWEEN 1 AND 30;";
        try (Statement stmt = connection.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                Requerimiento_3Vo requerimiento3 = new Requerimiento_3Vo();
                requerimiento3.setIDProyecto(rs.getInt("ID_Proyecto"));
                requerimiento3.setCiudad(rs.getString("Ciudad"));
                requerimiento3.setNombre(rs.getString("Nombre"));
                listado_registros_rq3.add(requerimiento3);
            }
        }
        return listado_registros_rq3;
    }
}
